<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <DebugType Condition="$(codecov) == 'true'">full</DebugType>
    <DebugType Condition="$(codecov) != 'true'">pdbonly</DebugType>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
    <NoWarn>S107,S2436</NoWarn>
    <TargetFrameworks>net40;net45;net451;netstandard1.3</TargetFrameworks>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <Version>0.0.0</Version>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="All" />
  </ItemGroup>


  <PropertyGroup>
    <Authors>Arjen Post</Authors>
    <Copyright>Copyright 2018 Arjen Post</Copyright>
    <Description>Dapper.Mapper is an extension to Dapper multi mapping which figures out the relationships between the returned objects and automatically assigns them. Instead of explicitly writing this: 'var employee = connection.Query&lt;Employee, Department, Employee&gt;(sql, (employee, department) =&gt; employee.Department = department; return employee;);' Dapper.Mapper allows you to write this: 'var employee = connection.Query&lt;Employee, Department&gt;(sql);'.</Description>
    <PackageId>Dapper.Mapper</PackageId>
    <PackageLicenseUrl>https://www.apache.org/licenses/LICENSE-2.0</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/dotarj/Dapper.Mapper</PackageProjectUrl>
    <PackageTags>orm;sql;micro-orm;dapper</PackageTags>
    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/dotarj/Dapper.Mapper</RepositoryUrl>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Dapper" Version="1.50.1" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'net40' OR '$(TargetFramework)' == 'net45' OR '$(TargetFramework)' == 'net451'">
    <Reference Include="Microsoft.CSharp" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard1.3'">
    <PackageReference Include="Microsoft.CSharp" Version="4.0.1" />
  </ItemGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'net45' OR '$(TargetFramework)' == 'net451' OR '$(TargetFramework)' == 'netstandard1.3'">
    <DefineConstants>$(DefineConstants);ASYNC</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'netstandard1.3'">
    <DefineConstants>$(DefineConstants);NETSTANDARD</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="StyleCop.Analyzers" Version="1.0.2" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <AdditionalFiles Include="../../stylecop.json" Visible="False" />
  </ItemGroup>

  <PropertyGroup>
    <CodeAnalysisRuleSet>../../stylecop.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>

</Project>
